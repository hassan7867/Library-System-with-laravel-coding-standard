<?php

declare(strict_types=1);

use PHPUnit\Framework\TestCase;
use \library_system\types\Date;

class DateTests extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * Test string is empty or not
     *
     * @param string $testString
     * @param bool $expected
     * @dataProvider dataProviderForEmptyStringTest
     */
    public function test_check_string_is_empty_or_not(string $testString, bool $expected)
    {
        $text = new Date($testString);
        $actual = $text->isEmpty();
        $this->assertEquals($actual, $expected);
    }

    /**
     * @return array
     */
    public function dataProviderForEmptyStringTest(): array
    {
        return [
            ['', true],
            ['nonEmpty', false],
            ['with 123 number', false],
        ];
    }

    /**
     * Test return value of given string
     *
     * @param string $testData
     * @param string $expected
     * @dataProvider dataProviderForStringValueTest
     */
    public function test_check_returned_value_is_similiar_to_given_value(string $testData, string $expected)
    {
        $txt = new Date($testData);
        $actual = $txt->value();
        $this->assertEquals($actual, $expected);
    }

    /**
     * @return array
     */
    public function dataProviderForStringValueTest(): array
    {
        return [
            ['2019-09-09', '2019-09-09'],
            ['2020-12-12', '2020-12-12'],
        ];
    }

    public function tearDown(): void
    {

    }
}
